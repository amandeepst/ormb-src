/**
 * Generated by com.splwg.tools.artifactgen.ArtifactGenerator
 * Template: PersistentClass.vm
 * $File: //FW/4.0.1/Code/modules/tools/source/java/com/splwg/tools/artifactgen/templates/PersistentClass.vm $
 * $DateTime: 2009/12/17 11:38:59 $
 * $Revision: #1 $
 */
package com.splwg.cm.domain.wp.ilm;

import java.math.BigInteger;

import com.splwg.base.api.datatypes.Bool;
import com.splwg.base.api.datatypes.Id;
import com.splwg.base.support.api.FrameworkBusinessEntity;
import com.splwg.base.support.api.PersistenceStrategy;
import com.splwg.base.api.datatypes.Date;
import com.splwg.base.api.datatypes.DateTime;
import com.splwg.base.api.DataTransferObject;

import com.splwg.base.support.context.FrameworkSession;

/**
  * Generated persistent class for CmAdjustmentStaging
  *
  * @author Generated by splDev.artifactGenerator
  */
public class CmAdjustmentStaging_Per
                 extends CmAdjustmentStaging_Impl
                 implements com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging,
                            FrameworkBusinessEntity<com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging>
{ 
    /* simple persistent fields */
    private String accountNumber;
    private String adjustmentCategory;
    private BigInteger adjustmentStagingControlID;
    private String status;
    private String division;
    private String errorInfo;
    private String eventId;
    private Bool isEligibleForArchiving;
    private Date ilmDate;
    private BigInteger messageCategory;
    private BigInteger messageNumber;
    private String saType;
    private DateTime statusDateTime;
    private DateTime uploadDateTime;
    /* FK properties */
    /* optional FK properties */
   /* child collections */

    //~ Methods ------------------------------------------------------------------------------------------

    /**
     * Default constructor.
     */
    public CmAdjustmentStaging_Per () {
       storePersistentFreshnessInfo(this);
    }

    /* the prime key */
    /**
      * Get the id property
      *
      * @return the id
      */
        @Override
    public com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_Id getId() {
        return (com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_Id) getPrivateId();
    }

    public void setId(com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_Id newId) {
        setPrivateId(newId);
    }

    /* simple persistent fields */
    /**
      * Get the accountNumber property
      *
      * @return accountNumber
      */
    @Override
    public String getAccountNumber() {
        verifyFreshState();
        return accountNumber;
    }
    public void setAccountNumber(String value) {
        this.accountNumber = value;
    }

    /**
      * Get the adjustmentCategory property
      *
      * @return adjustmentCategory
      */
    @Override
    public String getAdjustmentCategory() {
        verifyFreshState();
        return adjustmentCategory;
    }
    public void setAdjustmentCategory(String value) {
        this.adjustmentCategory = value;
    }

    /**
      * Get the adjustmentStagingControlID property
      *
      * @return adjustmentStagingControlID
      */
    @Override
    public BigInteger getAdjustmentStagingControlID() {
        verifyFreshState();
        return adjustmentStagingControlID;
    }
    public void setAdjustmentStagingControlID(BigInteger value) {
        this.adjustmentStagingControlID = value;
    }

    /**
      * Get the status property
      *
      * @return status
      */
    @Override
    public String getStatus() {
        verifyFreshState();
        return status;
    }
    public void setStatus(String value) {
        this.status = value;
    }

    /**
      * Get the division property
      *
      * @return division
      */
    @Override
    public String getDivision() {
        verifyFreshState();
        return division;
    }
    public void setDivision(String value) {
        this.division = value;
    }

    /**
      * Get the errorInfo property
      *
      * @return errorInfo
      */
    @Override
    public String getErrorInfo() {
        verifyFreshState();
        return errorInfo;
    }
    public void setErrorInfo(String value) {
        this.errorInfo = value;
    }

    /**
      * Get the eventId property
      *
      * @return eventId
      */
    @Override
    public String getEventId() {
        verifyFreshState();
        return eventId;
    }
    public void setEventId(String value) {
        this.eventId = value;
    }

    /**
      * Get the isEligibleForArchiving property
      *
      * @return isEligibleForArchiving
      */
    @Override
    public Bool getIsEligibleForArchiving() {
        verifyFreshState();
        return isEligibleForArchiving;
    }
    public void setIsEligibleForArchiving(Bool value) {
        this.isEligibleForArchiving = value;
    }

    /**
      * Get the ilmDate property
      *
      * @return ilmDate
      */
    @Override
    public Date getIlmDate() {
        verifyFreshState();
        return ilmDate;
    }
    public void setIlmDate(Date value) {
        this.ilmDate = value;
    }

    /**
      * Get the messageCategory property
      *
      * @return messageCategory
      */
    @Override
    public BigInteger getMessageCategory() {
        verifyFreshState();
        return messageCategory;
    }
    public void setMessageCategory(BigInteger value) {
        this.messageCategory = value;
    }

    /**
      * Get the messageNumber property
      *
      * @return messageNumber
      */
    @Override
    public BigInteger getMessageNumber() {
        verifyFreshState();
        return messageNumber;
    }
    public void setMessageNumber(BigInteger value) {
        this.messageNumber = value;
    }

    /**
      * Get the saType property
      *
      * @return saType
      */
    @Override
    public String getSaType() {
        verifyFreshState();
        return saType;
    }
    public void setSaType(String value) {
        this.saType = value;
    }

    /**
      * Get the statusDateTime property
      *
      * @return statusDateTime
      */
    @Override
    public DateTime getStatusDateTime() {
        verifyFreshState();
        return statusDateTime;
    }
    public void setStatusDateTime(DateTime value) {
        this.statusDateTime = value;
    }

    /**
      * Get the uploadDateTime property
      *
      * @return uploadDateTime
      */
    @Override
    public DateTime getUploadDateTime() {
        verifyFreshState();
        return uploadDateTime;
    }
    public void setUploadDateTime(DateTime value) {
        this.uploadDateTime = value;
    }


    /* FK properties */

    /* optional FK properties */


    /**
    * Set this object's fields from its corresponding data transfer object.
    * Accept a generic DTO, cast to my specific type.  Useful for framework code.
    *
    * @param dto the data transfer object
    */
    @Override
    public void setDTO(DataTransferObject<com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging> dto) {
        setDTOEtc(dto);
    }

    /**
      * Get the Data transfer object with this business entity's values
      *
      * @return a Data transfer object based upon this entity
      */
    @Override
    public com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_DTO getDTO() {
        verifyFreshState();
        CmAdjustmentStaging_DTO dto = new CmAdjustmentStaging_DTO();
        dto.setId(getId());
    /* Simple fields */
        dto.setAccountNumber(this.accountNumber);
        dto.setAdjustmentCategory(this.adjustmentCategory);
        dto.setAdjustmentStagingControlID(this.adjustmentStagingControlID);
        dto.setStatus(this.status);
        dto.setDivision(this.division);
        dto.setErrorInfo(this.errorInfo);
        dto.setEventId(this.eventId);
        dto.setIsEligibleForArchiving(this.isEligibleForArchiving);
        dto.setIlmDate(this.ilmDate);
        dto.setMessageCategory(this.messageCategory);
        dto.setMessageNumber(this.messageNumber);
        dto.setSaType(this.saType);
        dto.setStatusDateTime(this.statusDateTime);
        dto.setUploadDateTime(this.uploadDateTime);

    /* Optional FKs */

    /* Many-to-ones */


        return dto;
    }
    /**
      * @see com.splwg.base.api.BusinessEntity#entityName()
      */
    @Override
    public String entityName() {
        return "cmAdjustmentStaging";
    }




     /**
     * @see  com.splwg.base.api.PersistentEntity#delete()
     */
    @Override
    public void delete() {
        executeDelete();
    }

    /**
     * @see com.splwg.base.support.api.FrameworkBusinessEntity
     */
    @Override
    public DataTransferObject<com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging> setAbstractDTOValues(DataTransferObject<com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging> newDto) {
        com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_DTO dto = (com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_DTO) newDto;
        Id id = getPrivateId();
        boolean beingAdded = id == null || id.isNull();

        verifyFreshState();

        // set the oldDTO value used for change handler processing
        com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_DTO oldDTO = null;
        FrameworkSession frameworkSession = (FrameworkSession) getSession();
        if (!beingAdded){
            // this is a change
            if (! frameworkSession.isChangeHandlingDisabled()) {
                oldDTO = getDTO();
            }
        }
        PersistenceStrategy persistenceStrategy = getPersistenceStrategy();
        privateSetAbstractDTOValuesMiddle(beingAdded, com.splwg.cm.domain.wp.ilm.CmAdjustmentStaging_Id.NULL, dto, persistenceStrategy);

        Id proposedId = dto.getId();
        if (persistenceStrategy.shouldSetInternalValuesFromSetDto()){
            id = proposedId == null || proposedId.isNull() ? null : proposedId;
            setPrivateId(id);


            /* Simple fields */
            this.accountNumber = dto.getAccountNumber();
            this.adjustmentCategory = dto.getAdjustmentCategory();
            this.adjustmentStagingControlID = dto.getAdjustmentStagingControlID();
            this.status = dto.getStatus();
            this.division = dto.getDivision();
            this.errorInfo = dto.getErrorInfo();
            this.eventId = dto.getEventId();
            this.isEligibleForArchiving = dto.getIsEligibleForArchiving();
            this.ilmDate = dto.getIlmDate();
            this.messageCategory = dto.getMessageCategory();
            this.messageNumber = dto.getMessageNumber();
            this.saType = dto.getSaType();
            this.statusDateTime = dto.getStatusDateTime();
            this.uploadDateTime = dto.getUploadDateTime();

            /* Optional FKs */

        /* Many-to-ones */

        }
        return oldDTO;
    }

}
