/**
 * Generated by com.splwg.tools.artifactgen.ArtifactGenerator
 * Template: DTOClass.vm
 * $File: //FW/4.0.1/Code/modules/tools/source/java/com/splwg/tools/artifactgen/templates/DTOClass.vm $
 * $DateTime: 2009/12/17 11:38:59 $
 * $Revision: #1 $
 */
package com.splwg.cm.domain.wp.entity;

import com.splwg.base.api.datatypes.Date;
import com.splwg.base.api.datatypes.Money;
import com.splwg.ccb.api.lookup.FinancialTransactionTypeLookup;
import java.math.BigInteger;


import com.splwg.base.api.Versioned;

import com.splwg.base.support.impl.AbstractDataTransferObject;

/**
 * Data transfer object for CmFtGlAslAccountingId
 *
 * @author Generated by splDev.artifactGenerator
 */
public class CmFtGlAslAccountingId_DTO extends AbstractDataTransferObject<CmFtGlAslAccountingId> implements Versioned {

    /* version */
    private long version;
    /* persistent fields */
    private String glAccount = "";
    private Date accountingDate = null;
    private String counterparty = "";
    private String businessUnit = "";
    private String costCenter = "";
    private String intercompany = "";
    private String scheme = "";
    private FinancialTransactionTypeLookup financialTransactionType = com.splwg.base.api.datatypes.LookupHelper.getLookupInstance(FinancialTransactionTypeLookup.class, "");
    private String batchControl = "";
    private BigInteger batchNumber = BigInteger.ZERO;
    private String accountNumber = "";
    private Money amount = Money.ZERO;
    /* Many-to-ones and optional FKs*/
    private com.splwg.base.domain.common.currency.Currency_Id currencyId;
    /**
      * Create a new CmFtGlAslAccountingId_DTO
      */
    public CmFtGlAslAccountingId_DTO() {
      // empty constructor
    }

    @Override
    public String entityName() {
        return "cmFtGlAslAccountingId";
    }

    /**
      * Get the id property
      *
      * @return the id
      */
    @Override
    public com.splwg.cm.domain.wp.entity.CmFtGlAslAccountingId_Id getId() {
        return (com.splwg.cm.domain.wp.entity.CmFtGlAslAccountingId_Id) getAbstractId();
    }
    /* version */
    /**
      * Get the version
      *
      * @return the version
      */
    @Override
    public long getVersion() {
        return version;
    }
    /**
      * Set the version
      *
      * @param newVersion the new version
      */
    public void setVersion(long newVersion) {
        version = newVersion;
    }

    /* persistent fields */
    /**
      * Get the glAccount property
      *
      * @return glAccount
      */
    public String getGlAccount() {
        return glAccount;
    }
    /**
      * Set the glAccount property
      * The string will be truncated to fit the field's size of 254
      *
      * @param value the new value
      */
    public void setGlAccount(String value) {
        this.glAccount = modifyVarCharString("glAccount", value, 254 );
    }
    /**
      * Get the accountingDate property
      *
      * @return accountingDate
      */
    public Date getAccountingDate() {
        return accountingDate;
    }
    /**
      * Set the accountingDate property
      *
      * @param value the new value
      */
    public void setAccountingDate(Date value) {
        this.accountingDate = value;
    }
    /**
      * Get the counterparty property
      *
      * @return counterparty
      */
    public String getCounterparty() {
        return counterparty;
    }
    /**
      * Set the counterparty property
      *
      * @param value the new value
      */
    public void setCounterparty(String value) {
        this.counterparty = value;
    }
    /**
      * Get the businessUnit property
      *
      * @return businessUnit
      */
    public String getBusinessUnit() {
        return businessUnit;
    }
    /**
      * Set the businessUnit property
      *
      * @param value the new value
      */
    public void setBusinessUnit(String value) {
        this.businessUnit = value;
    }
    /**
      * Get the costCenter property
      *
      * @return costCenter
      */
    public String getCostCenter() {
        return costCenter;
    }
    /**
      * Set the costCenter property
      *
      * @param value the new value
      */
    public void setCostCenter(String value) {
        this.costCenter = value;
    }
    /**
      * Get the intercompany property
      *
      * @return intercompany
      */
    public String getIntercompany() {
        return intercompany;
    }
    /**
      * Set the intercompany property
      * The string will be truncated to fit the field's size of 12
      *
      * @param value the new value
      */
    public void setIntercompany(String value) {
        this.intercompany = modifyVarCharString("intercompany", value, 12 );
    }
    /**
      * Get the scheme property
      *
      * @return scheme
      */
    public String getScheme() {
        return scheme;
    }
    /**
      * Set the scheme property
      *
      * @param value the new value
      */
    public void setScheme(String value) {
        this.scheme = value;
    }
    /**
      * Get the financialTransactionType property
      *
      * @return financialTransactionType
      */
    public FinancialTransactionTypeLookup getFinancialTransactionType() {
        return financialTransactionType;
    }
    /**
      * Set the financialTransactionType property
      *
      * @param value the new value
      */
    public void setFinancialTransactionType(FinancialTransactionTypeLookup value) {
        this.financialTransactionType = value;
    }
    /**
      * Get the batchControl property
      *
      * @return batchControl
      */
    public String getBatchControl() {
        return batchControl;
    }
    /**
      * Set the batchControl property
      *
      * @param value the new value
      */
    public void setBatchControl(String value) {
        this.batchControl = value;
    }
    /**
      * Get the batchNumber property
      *
      * @return batchNumber
      */
    public BigInteger getBatchNumber() {
        return batchNumber;
    }
    /**
      * Set the batchNumber property
      *
      * @param value the new value
      */
    public void setBatchNumber(BigInteger value) {
        this.batchNumber = value;
    }
    /**
      * Get the accountNumber property
      *
      * @return accountNumber
      */
    public String getAccountNumber() {
        return accountNumber;
    }
    /**
      * Set the accountNumber property
      * The string will be truncated to fit the field's size of 30
      *
      * @param value the new value
      */
    public void setAccountNumber(String value) {
        this.accountNumber = modifyVarCharString("accountNumber", value, 30 );
    }
    /**
      * Get the amount property
      *
      * @return amount
      */
    public Money getAmount() {
        return amount;
    }
    /**
      * Set the amount property
      *
      * @param value the new value
      */
    public void setAmount(Money value) {
        this.amount = value;
    }

    /* Many-to-ones and optional FKs*/

    /**
      * Get the currencyId Id property
      *
      * @return currencyId the Id
      */
    public com.splwg.base.domain.common.currency.Currency_Id getCurrencyId() {
        return currencyId;
    }
    /**
      * Set the currencyId Id property
      *
      * @param theValue the new currencyId Id
      */
    public void setCurrencyId(com.splwg.base.domain.common.currency.Currency_Id theValue) {
        currencyId = theValue;
    }
    public com.splwg.base.domain.common.currency.Currency fetchCurrency () {
        com.splwg.base.domain.common.currency.Currency_Id id = getCurrencyId();
        if (id == null || id.isNull()) return null;
        return
               id.getEntity();
    }

    /* canonical methods */

    @Override
    public CmFtGlAslAccountingId newEntity() {
         return abstractNewEntity();
    }
}
