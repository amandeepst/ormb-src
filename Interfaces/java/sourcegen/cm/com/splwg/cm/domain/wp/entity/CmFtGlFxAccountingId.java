/**
 * Generated by com.splwg.tools.artifactgen.ArtifactGenerator
 * Template: Interface.vm
 * $File: //FW/4.0.1/Code/modules/tools/source/java/com/splwg/tools/artifactgen/templates/Interface.vm $
 * $DateTime: 2009/12/17 11:38:59 $
 * $Revision: #1 $
 */





package com.splwg.cm.domain.wp.entity;



import com.splwg.base.api.Property;
import com.splwg.base.support.changehandlers.PropertyHolder;
import com.splwg.base.support.api.SinglePropertyStaticMetadata;

import com.splwg.base.api.changehandling.*;

import com.splwg.base.api.SimpleKeyedBusinessEntity;

import com.splwg.base.api.SessionManagedEntity;



import com.splwg.base.api.Versioned;

/**
  * Interface to CmFtGlFxAccountingId
  *
  * @author Generated by splDev.artifactGenerator
  */
public interface CmFtGlFxAccountingId 
   extends SimpleKeyedBusinessEntity<CmFtGlFxAccountingId> , SessionManagedEntity, Versioned 
{


    /* the prime key */
    /**
      * Get the id property
      *
      * @return the id
      */
    public com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId_Id getId();


    /* simple persistent fields */
    /**
      * Get the glAccount property
      *
      * @return glAccount
      */
    public java.lang.String getGlAccount();
    /**
      * Get the accountingDate property
      *
      * @return accountingDate
      */
    public com.splwg.base.api.datatypes.Date getAccountingDate();
    /**
      * Get the fundCurrency property
      *
      * @return fundCurrency
      */
    public java.lang.String getFundCurrency();
    /**
      * Get the binSettlementCurrency property
      *
      * @return binSettlementCurrency
      */
    public java.lang.String getBinSettlementCurrency();
    /**
      * Get the counterparty property
      *
      * @return counterparty
      */
    public java.lang.String getCounterparty();
    /**
      * Get the businessUnit property
      *
      * @return businessUnit
      */
    public java.lang.String getBusinessUnit();
    /**
      * Get the batchControl property
      *
      * @return batchControl
      */
    public java.lang.String getBatchControl();
    /**
      * Get the batchNumber property
      *
      * @return batchNumber
      */
    public java.math.BigInteger getBatchNumber();

    /* FK properties */

    /* optional FK properties */

    /* Collection accessors */

    /**
      * Get the Data transfer object with this business entity's values
      *
      * @return a Data transfer object based upon this entity
      */
    @Override
    public com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId_DTO getDTO();



   
   /**
    * The properties of CmFtGlFxAccountingId
    *
    */
    public static EntityProperties properties = new EntityProperties();
    
   /**
    * The {@link PropertyHolder} class containing the entities properties
    *
    */
    public static class EntityProperties extends PropertyHolder<com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId> {
    
        //~ Constructors -------------------------------------------------------------------------------------
        
        public EntityProperties(Property<com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId> referencingProperty) {
            super(referencingProperty);
        }

        private EntityProperties() {
            super(null);
        }

        /**
         * @returns Return the entity name
         */
        @Override
        public String getEntityName() {
            return "cmFtGlFxAccountingId";
        }
            
        @Override    
        public final Property[] getAllProperties(){
            return ALL_PROPERTIES.clone();
        }
    
        /** The glAccount property */
        public final StringProperty glAccount
            = new StringProperty(new SinglePropertyStaticMetadata(this, "glAccount", "CM_FT_GL_FX_ACCTING_ID        ", "GL_ACCT                       ", false, 254, 0));
        /** The accountingDate property */
        public final DateProperty accountingDate
            = new DateProperty(new SinglePropertyStaticMetadata(this, "accountingDate", "CM_FT_GL_FX_ACCTING_ID        ", "ACCOUNTING_DT                 ", false, 10, 0));
        /** The fundCurrency property */
        public final StringProperty fundCurrency
            = new StringProperty(new SinglePropertyStaticMetadata(this, "fundCurrency", "CM_FT_GL_FX_ACCTING_ID        ", "FUND_CURRENCY                 ", false, 3, 0));
        /** The binSettlementCurrency property */
        public final StringProperty binSettlementCurrency
            = new StringProperty(new SinglePropertyStaticMetadata(this, "binSettlementCurrency", "CM_FT_GL_FX_ACCTING_ID        ", "BIN_SETTLE_CURRENCY           ", false, 3, 0));
        /** The counterparty property */
        public final StringProperty counterparty
            = new StringProperty(new SinglePropertyStaticMetadata(this, "counterparty", "CM_FT_GL_FX_ACCTING_ID        ", "COUNTERPARTY                  ", false, 12, 0));
        /** The businessUnit property */
        public final StringProperty businessUnit
            = new StringProperty(new SinglePropertyStaticMetadata(this, "businessUnit", "CM_FT_GL_FX_ACCTING_ID        ", "BUSINESS_UNIT                 ", false, 20, 0));
        /** The batchControl property */
        public final StringProperty batchControl
            = new StringProperty(new SinglePropertyStaticMetadata(this, "batchControl", "CM_FT_GL_FX_ACCTING_ID        ", "BATCH_CD                      ", false, 8, 0));
        /** The batchNumber property */
        public final IntegerProperty batchNumber
            = new IntegerProperty(new SinglePropertyStaticMetadata(this, "batchNumber", "CM_FT_GL_FX_ACCTING_ID        ", "BATCH_NBR                     ", false, 10, 0));

        /** The ID property */
        public final IdProperty<com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId> id = new IdProperty<com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId>(this, "CM_FT_GL_FX_ACCTING_ID        ", "CM_FXACTPK  ", "CM  ");
       

        /** The version property */
        public final VersionProperty version = new VersionProperty(this, "CM_FT_GL_FX_ACCTING_ID        ");
            
        // References to parent entities PropertyHolders    
    
        /** An array of all the properties */
        private final Property[] ALL_PROPERTIES = {
           glAccount,accountingDate,fundCurrency,binSettlementCurrency,counterparty,businessUnit,batchControl,batchNumber,               id
               ,version
};


        public static class ReferenceProperty
            extends ReferencePropertyValue {

            //~ Instance fields ------------------------------------------------------------------------------

            private ReferencePropertyValue oldValue;

            //~ Constructors ---------------------------------------------------------------------------------

            public ReferenceProperty(PropertyHolder holder, String propertyName, String tableName,
                                         String dbName, String owner,
                                         boolean isInPK,
                                         boolean isOptional) {
                super(holder, propertyName, tableName, dbName, owner, isInPK, isOptional);
            }

            //~ Methods --------------------------------------------------------------------------------------

            public ReferencePropertyValue getOldValue() {
                if (oldValue == null) {
                    oldValue = new ReferencePropertyValue(getPropertyHolder(),
                                                              getPropertyName(),
                                                              getTableName(),
                                                              getDbName(), getOwner(),
                                                              isPKForeignKeyProperty(),
                                                              isOptionalFKProperty());
                }
                return oldValue;
            }


            /**
             * @see com.splwg.base.api.changehandling.OldValueContainingProperty#wasChanged()
             */
            public Condition wasChanged() {
                 return isEqualTo(getOldValue()).not();
            }

            /**
             * @see com.splwg.base.api.changehandling.PropertyValue#isOldVersion()
             */
            @Override
            public boolean isOldVersion() {
                return false;
            }

            /**
             * @see com.splwg.base.api.changehandling.PropertyValue#isOldVersion()
             */
            @Override
            public boolean isNewVersion() {
                return true;
            }
            
        }

        public static class ReferencePropertyValue
            extends ManyToOnePropertyValue<CmFtGlFxAccountingId> {

            //~ Constructors ---------------------------------------------------------------------------------

            public ReferencePropertyValue(PropertyHolder holder, String propertyName, String tableName,
                                              String dbName, String owner,
                                              boolean isInPK,
                                              boolean isOptional) {
                super(holder, propertyName, tableName, dbName, owner, isInPK, isOptional);
            }

            //~ Methods --------------------------------------------------------------------------------------

            public Condition isEqualTo(ReferencePropertyValue other) {
                return privateEqualTo(other);
            }

            public Condition isEqualTo(com.splwg.cm.domain.wp.entity.CmFtGlFxAccountingId_Id id) {
                return privateEqualTo(id);
            }

            @Override
            public String getReferencedTableName() {
                return "CM_FT_GL_FX_ACCTING_ID";
            }
        }
   	
    }
}
